import { IconButton } from "@mui/material";
import { AxiosResponse } from "axios";
import StatusLabel from "components/StatusLabel";
import moment from "moment";
import { ColumnType } from "types";
import { currencyFormat } from "utils/currencyFormat";
import PriceCheckIcon from "@mui/icons-material/PriceCheck";
import CancelIcon from "@mui/icons-material/Cancel";

export const club_batch_payout_columns: ColumnType[] = [
  {
    key: 1,
    label: "ID",
    path: "id"
  },
  {
    key: 2,
    label: "Total Club Fee",
    path: "total_club_fee"
  },
  {
    key: 3,
    label: "Generated By",
    path: "generated_by"
  },
  {
    key: 3,
    label: "Date Created",
    path: "date_created"
  },
  {
    key: 4,
    label: "Status",
    path: "status"
  }
];

export const club_cash_advance_column: ColumnType[] = [
  // {
  //   content: ({ toggle, isSelected, ...props }: any) => {
  //     return (
  //       <Checkbox checked={isSelected} onChange={() => toggle(props.id)} />
  //     );
  //   },
  //   key: 0,
  //   label: "",
  //   path: "check_box"
  // },
  {
    key: 1,
    label: "ID",
    path: "id"
  },
  {
    key: 2,
    label: "Club Name",
    path: "club_name"
  },
  {
    key: 3,
    label: "Amount",
    path: "amount"
  },
  {
    key: 3,
    label: "Date Created",
    path: "date_created"
  },
  {
    key: 4,
    label: "Status",
    path: "status"
  },
  {
    content: (props: any) => {
      if (props.status.props.status === "PENDING") {
        return (
          <>
            <IconButton
              color="primary"
              aria-label="upload picture"
              component="label"
              onClick={() =>
                props.openModal({ id: props?.id, status: "APPROVED" })
              }
            >
              <PriceCheckIcon />
            </IconButton>
            <IconButton
              color="error"
              onClick={() =>
                props.openModal({ id: props?.id, status: "REJECTED" })
              }
            >
              <CancelIcon />
            </IconButton>
          </>
        );
      } else {
        return null;
      }
    },
    key: 5,
    label: "Action",
    path: "action"
  }
];

export const club_batch_payoutdetails_column: ColumnType[] = [
  {
    key: 1,
    label: "ID",
    path: "id"
  },
  {
    key: 2,
    label: "Club Name",
    path: "club_name"
  },
  {
    key: 3,
    label: "Amount",
    path: "amount"
  }
];

export const tabs = [
  {
    label: "ALL",
    name: "ALL"
  },
  {
    label: "Club Payout",
    name: "CLUB_PAYOUT"
  },
  {
    label: "Cash Advance",
    name: "CASH_ADVANCE"
  }
];

export const parseBatchClubPayoutList = (
  response: AxiosResponse<any, any> | undefined
) => {
  return response?.data?.data.map((batch: any) => ({
    date_created: moment(batch.createdAt).format("LLL"),
    generated_by: `${batch?.user?.first_name} ${batch?.user?.last_name}`,
    id: batch.id,
    status: <StatusLabel status={batch.status} />,
    total_club_fee: currencyFormat(batch.total_club_fee)
  }));
};

export const parseBatchClubPayoutDetails = (
  response: AxiosResponse<any, any> | undefined
) => {
  return response?.data?.club_payout_details[0]?.club_payouts?.map(
    (club_payout_details: any) => ({
      amount: currencyFormat(club_payout_details.amount),
      club_name: club_payout_details?.Club?.club_name,
      id: club_payout_details.id,
      status: club_payout_details?.status
      // total_club_fee: currencyFormat(batch.total_club_fee)
    })
  );
};

export const parseCashAdvances = (
  response: AxiosResponse<any, any> | undefined,
  openModal: (data: any) => void
  // toggle: (data: string) => void
) => {
  return response?.data?.data?.map((cash_advance: any) => {
    // const isSelected = cash_advance
    //   ? isChecked(cash_advance?.id?.toString())
    //   : false;

    return {
      // action:()=>
      // isSelected,
      // toggle
      amount: currencyFormat(cash_advance.amount),
      club_name: cash_advance?.Club?.club_name,
      date_created: moment(cash_advance.createdAt).format("LLL"),
      id: cash_advance?.id?.toString(),
      openModal,
      status: <StatusLabel status={cash_advance.status} />
    };
  });
};
